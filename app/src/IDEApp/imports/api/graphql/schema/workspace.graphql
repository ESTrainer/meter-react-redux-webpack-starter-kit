type Ports {
  socket: Int,
  application: Int,
}

type Info {
  container: String,
  ports: Ports
}

enum Status {
  STATUS_SHUTDOWN,
  STATUS_ACTIVE,
  STATUS_PROCESS,
}

type Workspace {
  _id: ID,
  name: String,
  lang: String,
  creator: String,
  completed: Boolean,
  server: Server,
  info: Info,
  workspace: String,
  status: Status
  createdAt: Date
  updatedAt: Date
}

extend type Mutation {
  addWorkspace(
  name: String!
  description: String
  status: Status
  lang: String
  ): Workspace
}

type Subscription {
  # Subscription fires on every comment added
  workspaceAdded(name: String!): Workspace
}

extend type Query {
  workspace: [Workspace]
}
